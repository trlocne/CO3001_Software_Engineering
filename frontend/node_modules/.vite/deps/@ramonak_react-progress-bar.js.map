{
  "version": 3,
  "sources": ["../../@ramonak/react-progress-bar/src/index.tsx"],
  "sourcesContent": ["import * as React from \"react\";\n\nexport type ProgressBarProps = {\n  completed: string | number;\n  bgColor?: string;\n  baseBgColor?: string;\n  height?: string;\n  width?: string;\n  borderRadius?: string;\n  margin?: string;\n  padding?: string;\n  labelAlignment?: \"left\" | \"center\" | \"right\" | \"outside\";\n  labelColor?: string;\n  labelSize?: string;\n  customLabelStyles?: React.CSSProperties;\n  isLabelVisible?: boolean;\n  transitionDuration?: string;\n  transitionTimingFunction?:\n    | \"ease\"\n    | \"linear\"\n    | \"ease-in\"\n    | \"ease-out\"\n    | \"ease-in-out\";\n  className?: string;\n  dir?: \"ltr\" | \"rtl\" | \"auto\";\n  ariaValuemin?: number;\n  ariaValuemax?: number;\n  ariaValuetext?: number | null;\n  maxCompleted?: number;\n  customLabel?: string;\n  animateOnRender?: boolean;\n  barContainerClassName?: string;\n  completedClassName?: string;\n  labelClassName?: string;\n  initCompletedOnAnimation?: string | number;\n  isIndeterminate?: boolean;\n};\n\nconst ProgressBar: React.FC<ProgressBarProps> = ({\n  bgColor = \"#6a1b9a\",\n  height = \"20px\",\n  width = \"100%\",\n  borderRadius = \"50px\",\n  labelAlignment = \"right\",\n  baseBgColor = \"#e0e0de\",\n  labelColor = \"#fff\",\n  labelSize = \"15px\",\n  isLabelVisible = true,\n  dir = \"ltr\",\n  ariaValuemin = 0,\n  ariaValuemax = 100,\n  ariaValuetext = null,\n  maxCompleted = 100,\n  animateOnRender = false,\n  initCompletedOnAnimation = 0,\n  isIndeterminate = false,\n  completed,\n  margin,\n  padding,\n  customLabelStyles,\n  transitionDuration,\n  transitionTimingFunction,\n  className,\n  customLabel,\n  barContainerClassName,\n  completedClassName,\n  labelClassName,\n}) => {\n  const getAlignment = (\n    alignmentOption: ProgressBarProps[\"labelAlignment\"]\n  ) => {\n    if (alignmentOption === \"left\") {\n      return \"flex-start\";\n    } else if (alignmentOption === \"center\") {\n      return \"center\";\n    } else if (alignmentOption === \"right\") {\n      return \"flex-end\";\n    } else {\n      return null;\n    }\n  };\n\n  const alignment = getAlignment(labelAlignment);\n\n  const initCompletedOnAnimationStr =\n    typeof initCompletedOnAnimation === \"number\"\n      ? `${initCompletedOnAnimation}%`\n      : initCompletedOnAnimation;\n\n  const getFillerWidth = (\n    maxCompletedValue: ProgressBarProps[\"maxCompleted\"],\n    completedValue: ProgressBarProps[\"completed\"]\n  ) => {\n    if (maxCompletedValue) {\n      const ratio = Number(completedValue) / maxCompletedValue;\n      return ratio > 1 ? \"100%\" : `${ratio * 100}%`;\n    }\n    return initCompletedOnAnimationStr;\n  };\n\n  const fillerWidth = getFillerWidth(maxCompleted, completed);\n\n  const [initWidth, setInitWidth] = React.useState<string>(\n    initCompletedOnAnimationStr\n  );\n\n  const containerStyles: React.CSSProperties = {\n    height: height,\n    background: baseBgColor,\n    borderRadius: borderRadius,\n    padding: padding,\n    width: width,\n    margin: margin,\n    overflow: \"hidden\",\n  };\n\n  const fillerStyles: React.CSSProperties = {\n    height: height,\n    width: isIndeterminate ? \"100%\" : animateOnRender ? initWidth : fillerWidth,\n    background: bgColor,\n    transition: isIndeterminate\n      ? \"none\"\n      : `width ${transitionDuration || \"1s\"} ${\n          transitionTimingFunction || \"ease-in-out\"\n        }`,\n    borderRadius: \"inherit\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent:\n      labelAlignment !== \"outside\" && alignment ? alignment : \"normal\",\n    animation: isIndeterminate ? \"indeterminate 1.5s infinite linear\" : \"none\",\n  };\n\n  const labelStyles: React.CSSProperties = {\n    padding: labelAlignment === \"outside\" ? \"0 0 0 5px\" : \"5px\",\n    color: labelColor,\n    fontWeight: \"bold\",\n    fontSize: labelSize,\n    display: !isLabelVisible ? \"none\" : \"initial\",\n    ...customLabelStyles,\n  };\n\n  const outsideStyles = {\n    display: labelAlignment === \"outside\" ? \"flex\" : \"initial\",\n    alignItems: labelAlignment === \"outside\" ? \"center\" : \"initial\",\n  };\n\n  const completedStr =\n    typeof completed === \"number\" ? `${completed}%` : `${completed}`;\n\n  const labelStr = customLabel ? customLabel : completedStr;\n\n  React.useEffect(() => {\n    if (animateOnRender && !isIndeterminate) {\n      requestAnimationFrame(() => setInitWidth(fillerWidth));\n    }\n  }, [fillerWidth, animateOnRender, isIndeterminate]);\n\n  return (\n    <div\n      style={className ? undefined : outsideStyles}\n      className={className}\n      dir={dir}\n      role=\"progressbar\"\n      aria-valuenow={isIndeterminate ? undefined : parseFloat(labelStr)}\n      aria-valuemin={ariaValuemin}\n      aria-valuemax={ariaValuemax}\n      aria-valuetext={`${ariaValuetext === null ? labelStr : ariaValuetext}`}\n    >\n      <div\n        style={barContainerClassName ? undefined : containerStyles}\n        className={barContainerClassName}\n      >\n        <div\n          style={completedClassName ? undefined : fillerStyles}\n          className={completedClassName}\n        >\n          {labelAlignment !== \"outside\" && (\n            <span\n              style={labelClassName ? undefined : labelStyles}\n              className={labelClassName}\n            >\n              {labelStr}\n            </span>\n          )}\n        </div>\n      </div>\n      {labelAlignment === \"outside\" && (\n        <span\n          style={labelClassName ? undefined : labelStyles}\n          className={labelClassName}\n        >\n          {labelStr}\n        </span>\n      )}\n      <style>\n        {`\n          @keyframes indeterminate {\n            0% {\n              width: 30%;\n              transform: translateX(-50%);\n            }\n            50% {\n              width: 30%;\n              transform: translateX(250%);\n            }\n            100% {\n              width: 30%;\n              transform: translateX(-50%);\n            }\n          }\n        `}\n      </style>\n    </div>\n  );\n};\n\nexport default ProgressBar;\n"],
  "mappings": "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",
  "names": ["React"]
}
